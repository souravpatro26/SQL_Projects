use AmazonCS

--What is the total Sales Generated by Year
Alter table order_details
Add total_sales float

Alter table order_details
Alter column unitPrice float

Alter table order_details
Alter column quantity int

Alter table order_details
Alter column discount float

Update order_details
set total_sales = case 
					when discount = 0 then unitPrice * quantity
					else unitPrice * quantity * discount
					end  

select YEAR(orderDate)as Year ,sum(total_sales) as Total_revenue from order_details as od
 left join orders as O
 On od.orderID = O.orderID
 group by YEAR(orderDate) 
 order by Year asc

 --What is the top 5 countries generating the most sales
 select top 5 country , sum(total_sales) as Most_sales from order_details as od
 left join orders as O
 On od.orderID = O.orderID  
 join customers as c
 on O.customerID = c.customerID
group by country
order by Most_sales desc 

--How is the performance and efficiency of the different shipping providers

alter table orders
alter column freight float

select shipperID, companyName , sum(freight)as order_value, 
round((sum(freight)/(select sum(freight) from orders)*100),3) as efficiency from shippers as sh
join orders as o
on sh.shipperID = o.shipvia
group by shipperID,companyName
order by shipperID 

--What suppliers account for most of the sales value
select companyName , sum(total_sales) as sales_values from order_details as od
join products as pd
on od.productID = pd.productID
join suppliers as su 
on su.supplierID = pd.supplierID
group by companyName
order by sales_values desc

--Percentage change by the years for sales

select YEAR(orderDate)as Year ,sum(total_sales) as Total_revenue,
round (((SUM(total_sales) - LAG(SUM(total_sales), 1) OVER (ORDER BY YEAR(orderDate))) / LAG(SUM(total_sales), 1) 
OVER (ORDER BY YEAR(orderDate))) * 100,2) AS percentage_change
from order_details as od
 left join orders as O
 On od.orderID = O.orderID
 group by YEAR(orderDate) 
 order by Year asc

--Items most frequently Ordered
alter table products
alter column reorderlevel int

 select top 1  productName , sum(reorderlevel) as frequently_order from order_details as od
join products as prod
on prod.productID = od.productID
group by productName
order by frequently_order desc

--For the top 5 categories,what is the Month by Month change in Qty ordered

WITH top_categories AS (
SELECT TOP 5 c.categoryName,SUM(od.quantity) AS total_qty_ordered
FROM categories as c
join products as p on c.categoryID = p.categoryID
join order_details as od on p.productID = od.productID
join orders as o on od.orderID = o.orderID
GROUP BY c.categoryName
ORDER BY total_qty_ordered DESC
),
monthly_orders AS (
SELECT c.categoryName,MONTH(o.orderDate) AS month,SUM(od.quantity) AS total_qty_ordered
FROM categories as c
join products as p on c.categoryID = p.categoryID
join order_details as od on p.productID = od.productID
join orders as o on od.orderID = o.orderID
JOIN top_categories tc ON c.categoryName = tc.categoryName
GROUP BY c.categoryName,MONTH(o.orderDate)
)
SELECT m.categoryName,m.month,m.total_qty_ordered,
m.total_qty_ordered - LAG(m.total_qty_ordered, 1, 0) OVER (PARTITION BY m.categoryName ORDER BY m.month) AS month_by_month_change
FROM monthly_orders m
ORDER BY m.categoryName,m.month;

--DATEADD(month, DATEDIFF(month, 0, o.orderDate), 0)